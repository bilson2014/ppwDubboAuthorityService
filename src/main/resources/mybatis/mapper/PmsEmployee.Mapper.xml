<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paipianwang.pat.facade.right.service.dao.impl.PmsEmployeeDaoImpl">

	<!-- 人员表 -->
	<sql id="pms_employee"> EMPLOYEE </sql>
	<sql id="pms_employee_role"> EMPLOYEE_ROLE </sql>
	<sql id="pms_role"> ROLE </sql>
	
	<!-- 条件设置 -->
	<sql id="condition">
		<if test="employeeRealName != null and employeeRealName != ''">
			AND EMPLOYEEREALNAME LIKE CONCAT('%',#{employeeRealName},'%') 
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND PHONENUMBER = #{phoneNumber}
		</if>
		<if test="employeeIds != null and employeeIds != ''">
			AND EMPLOYEEID IN 
			<foreach collection="employeeIds" item="employeeId" separator=","
				open="(" close=")">
				${employeeId}
			</foreach>
		</if>
		
		<if test="dimissionStatus != null and dimissionStatus != -1">
			AND DIMISSIONSTATUS = ${dimissionStatus} 
		</if>
		
		<if test="hireBeginDate != null and hireBeginDate != '' ">
			<![CDATA[
				AND DATE_FORMAT(HIREDATE,'%Y-%m-%d') >= #{hireBeginDate}
			]]>
		</if>
		
		<if test="hireEndDate != null  and hireEndDate != ''">
			<![CDATA[
				AND DATE_FORMAT(HIREDATE,'%Y-%m-%d') <= #{hireEndDate}
			]]>
		</if>
		
		<if test="flag != null and flag != -1">
			AND FLAG = ${flag}
		</if>
	</sql>
	
	<resultMap type="PmsEmployee" id="EmployeeMap">
		<id property="employeeId" column="employeeId" />
		<result property="employeeLoginName" column="employeeLoginName" />
		<result property="employeeRealName" column="employeeRealName" />
		<result property="employeePassword" column="employeePassword" />
		<result property="employeeImg" column="employeeImg" />
		<result property="employeeDescription" column="employeeDescription" />
		<result property="createDate" column="createDate" />
		<result property="updateDate" column="updateDate" />
		<result property="hireDate" column="hireDate" />
		<result property="email" column="email" />
		<result property="phoneNumber" column="phoneNumber" />
		<result property="flag" column="flag" />
		<result property="qqUnique" column="qqUnique" />
		<result property="wbUnique" column="wbUnique" />
		<result property="wechatUnique" column="wechatUnique" />
		<result property="dimissionStatus" column="dimissionStatus" />
	</resultMap>

	<resultMap type="PmsEmployee" id="EmployeeRoleMap" extends="EmployeeMap">
		<collection property="roles" ofType="com.paipianwang.pat.facade.right.entity.PmsRole">
			<id property="roleId" column="roleId" />
			<result property="roleName" column="roleName" />
			<result property="roleDescription" column="roleDescription" />
			<result property="createDate" column="createDate" />
			<result property="updateDate" column="updateDate" />
		</collection>
	</resultMap>
	
	<select id="doLogin" resultMap="EmployeeRoleMap">
		SELECT e.EMPLOYEEID,
			   e.EMPLOYEELOGINNAME,
			   e.EMPLOYEEREALNAME,
			   e.EMPLOYEEPASSWORD,
			   e.EMPLOYEEDESCRIPTION,
			   e.EMPLOYEEIMG,
			   e.PHONENUMBER,
			   e.EMAIL,
			   DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS updateDate,
			   r.ROLEID,
			   r.ROLENAME,
			   r.ROLEDESCRIPTION
		FROM  <include refid="pms_employee" /> e 
		LEFT JOIN <include refid="pms_employee_role" /> er
		   		ON e.EMPLOYEEID = er.EMPLOYEEID
		LEFT JOIN <include refid="pms_role" /> r
		   		ON er.ROLEID = r.ROLEID
	   <where>
	   		<![CDATA[
		   	   e.EMPLOYEELOGINNAME = #{loginName}
			   AND e.EMPLOYEEPASSWORD = #{password}
			   AND DIMISSIONSTATUS <> 1
		   ]]>
	   </where>
	</select>
	
	<select id="checkPhoneNumber" resultType="java.lang.Long">
		SELECT COUNT(1)
			FROM 
			<include refid="pms_employee" />
		<where>
			PHONENUMBER = #{phoneNumber}
		</where>
	</select>
	
	<update id="updatePwdById">
		UPDATE 
		<include refid="pms_employee" />
		<set>
			EMPLOYEEPASSWORD = #{employeePassword},
			UPDATEDATE = CURRENT_TIMESTAMP
		</set>
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<update id="updateUniqueId">
		UPDATE 
			<include refid="pms_employee" /> 
		<set>
			UPDATEDATE = CURRENT_TIMESTAMP

			<if test="qqUnique != null and qqUnique != ''">
				,QQUNIQUE = #{qqUnique}
			</if>
	
			<if test="wbUnique != null and wbUnique != ''">
				,WBUNIQUE = #{wbUnique}
			</if>
	
			<if test="wechatUnique != null and wechatUnique != ''">
				,WECHATUNIQUE = #{wechatUnique}
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				,PHONENUMBER = #{phoneNumber}
			</if>
		</set>
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<select id="listPage" resultType="PmsEmployee">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.EMPLOYEEDESCRIPTION AS employeeDescription,
			   e.EMPLOYEEIMG AS employeeImg,
			   e.EMAIL AS email,
			   e.PHONENUMBER AS phoneNumber,
			   DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS updateDate,
			   DATE_FORMAT(e.HIREDATE,'%Y-%m-%d') AS hireDate,
			   e.DIMISSIONSTATUS AS dimissionStatus
			FROM  <include refid="pms_employee" /> e 
		<where>
			e.FLAG = 1
			<include refid="condition" />
		</where>
		<![CDATA[
			ORDER BY e.EMPLOYEEID DESC
			LIMIT ${begin} , ${limit}
		]]>
	</select>
	
	<select id="listPageCount" resultType="java.lang.Long">
		SELECT COUNT(1)
		FROM  <include refid="pms_employee" /> e 
		<where>
			e.FLAG = 1
			<include refid="condition" />
		</where>
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="employeeId" parameterType="PmsEmployee">
		INSERT INTO 
		<include refid="pms_employee" /> 
		(  EMPLOYEELOGINNAME,
		   EMPLOYEEREALNAME,
		   EMPLOYEEPASSWORD,
		   EMPLOYEEDESCRIPTION,
		   EMAIL,
		   PHONENUMBER,
		   DIMISSIONSTATUS,
		   HIREDATE
		)
		VALUES (
			#{employeeLoginName},
			#{employeeRealName},
			#{employeePassword},
			#{employeeDescription},
			#{email},
			#{phoneNumber},
			${dimissionStatus},
			#{hireDate}
			)
	</insert>
	
	<insert id="saveRelativity">
		<if test="roleIds != null">
				INSERT INTO <include refid="pms_employee_role" /> 
					(  EMPLOYEEID,
					   ROLEID)
				VALUES 
			<foreach collection="roleIds" item="roleId" separator=",">
				<if test="roleId != 0">
					(${employeeId},${roleId})
				</if>
			</foreach>
		</if>
	</insert>
	
	<update id="updateImagePath">
		UPDATE 
		<include refid="pms_employee" /> 
		<set>
			EMPLOYEEIMG = #{employeeImg}
		</set> 
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<select id="getById" resultMap="EmployeeRoleMap">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.EMPLOYEEPASSWORD AS employeePassword,
			   e.EMPLOYEEDESCRIPTION AS employeeDescription,
			   e.EMPLOYEEIMG AS employeeImg,
			   e.EMAIL AS email,
			   e.PHONENUMBER AS phoneNumber,
			   DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS uploadDate,
			   DATE_FORMAT(e.HIREDATE,'%Y-%m-%d') AS hireDate,
			   r.ROLEID,
			   r.ROLENAME,
			   r.ROLEDESCRIPTION
		FROM <include refid="pms_employee" /> e 
		LEFT JOIN <include refid="pms_employee_role" /> er
	   		ON e.EMPLOYEEID = er.EMPLOYEEID
	   LEFT JOIN <include refid="pms_role" /> r
	   		ON er.ROLEID = r.ROLEID
		<where>
			e.EMPLOYEEID = #{employeeId}
		</where>
	</select>
	
	<delete id="deleteById">
		DELETE FROM 
			<include refid="pms_employee" />
		<where>
			EMPLOYEEID = #{employeeId}
		</where>
	</delete>
	
	<delete id="deleteEmployeeRoleLink">
		DELETE FROM 
		<include refid="pms_employee_role" />
		<where>
			EMPLOYEEID = #{employeeId}
		</where>
	</delete>
	
	<update id="update">
		UPDATE 
		<include refid="pms_employee" />
		<set>
			EMPLOYEELOGINNAME = #{employeeLoginName},
			EMPLOYEEREALNAME = #{employeeRealName},
			<if test="employeePassword != null and employeePassword != ''">
				EMPLOYEEPASSWORD = #{employeePassword},
			</if>
			EMPLOYEEDESCRIPTION = #{employeeDescription},
			PHONENUMBER = #{phoneNumber},
			EMAIL = #{email},
			DIMISSIONSTATUS = ${dimissionStatus},
			UPDATEDATE = CURRENT_TIMESTAMP,
			HIREDATE = #{hireDate} 
		</set>
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<select id="findEmployeeWithVersionManagerRoleInfo" resultType="PmsEmployee">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.EMPLOYEEPASSWORD AS employeePassword,
			   e.EMPLOYEEDESCRIPTION AS employeeDescription,
			   e.EMPLOYEEIMG AS employeeImg,
			   e.EMAIL AS email,
			   e.PHONENUMBER AS phoneNumber,
			   DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS updateDate
			FROM <include refid="pms_employee" /> e 
			<where>
				<![CDATA[
					e.FLAG = 1
					AND DIMISSIONSTATUS <> 1
				]]>
				<include refid="condition" />
			</where>
	</select>
	
	<select id="findEmployeeList" resultType="PmsEmployee">
		SELECT 
				e.EMPLOYEEID AS employeeId,
			    e.EMPLOYEEREALNAME AS employeeRealName
		FROM <include refid="pms_employee" /> e
		<where>
			<![CDATA[
				e.FLAG = 1
				AND DIMISSIONSTATUS <> 1
			]]>
		</where>
	</select>
	
	<select id="verificationEmployeeExist" resultMap="EmployeeRoleMap">
		SELECT  e.EMPLOYEEID,
			    e.EMPLOYEELOGINNAME,
			    e.EMPLOYEEREALNAME,
			    e.EMPLOYEEPASSWORD,
			    e.EMPLOYEEDESCRIPTION,
			    e.EMPLOYEEIMG,
			    DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS updateDate,
			    r.ROLEID,
			    r.ROLENAME,
			    r.ROLEDESCRIPTION,
				e.qqUnique,
				e.wechatUnique,
				e.wbUnique,
				e.PHONENUMBER
		FROM <include refid="pms_employee" /> e 
			   LEFT JOIN <include refid="pms_employee_role" /> er
			   		ON e.EMPLOYEEID = er.EMPLOYEEID
			   LEFT JOIN <include refid="pms_role" /> r
			   		ON er.ROLEID = r.ROLEID
		<where>
			<![CDATA[
				(QQUNIQUE = #{qqUnique}
				OR wbUnique = #{wbUnique}
				OR wechatUnique = #{wechatUnique})
				AND DIMISSIONSTATUS <> 1
			]]>
		</where>
	</select>
	
	<select id="findEmployeesByRoleId" resultMap="EmployeeRoleMap">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.EMPLOYEEPASSWORD AS employeePassword,
			   e.EMPLOYEEDESCRIPTION AS employeeDescription,
			   e.EMPLOYEEIMG AS employeeImg,
			   e.EMAIL AS email,
			   e.PHONENUMBER AS phoneNumber,
			   DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS uploadDate,
			   r.ROLEID,
			   r.ROLENAME,
			   r.ROLEDESCRIPTION
		FROM <include refid="pms_employee" /> e 
			   LEFT JOIN <include refid="pms_employee_role" /> er
			   		ON e.EMPLOYEEID = er.EMPLOYEEID
			   LEFT JOIN <include refid="pms_role" /> r
			   		ON er.ROLEID = r.ROLEID
			<where>
				r.ROLEID = #{roleId} 
				AND e.dimissionStatus = 0
			</where>
	</select>
	
	<select id="findEmployeeByIds" resultType="PmsEmployee">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.EMPLOYEEPASSWORD AS employeePassword,
			   e.EMPLOYEEDESCRIPTION AS employeeDescription,
			   e.EMPLOYEEIMG AS employeeImg,
			   e.EMAIL AS email,
			   e.PHONENUMBER AS phoneNumber
		FROM <include refid="pms_employee" /> e 
		<where>
			<include refid="condition" />
		</where>
	</select>
	
	<select id="findEmployeesByPhoneNumber" resultMap="EmployeeRoleMap">
		SELECT  e.EMPLOYEEID,
			    e.EMPLOYEELOGINNAME,
			    e.EMPLOYEEREALNAME,
			    e.EMPLOYEEPASSWORD,
			    e.EMPLOYEEDESCRIPTION,
			    e.EMPLOYEEIMG,
			    DATE_FORMAT(e.UPDATEDATE,'%Y-%m-%d %T') AS updateDate,
			    r.ROLEID,
			    r.ROLENAME,
			    r.ROLEDESCRIPTION,
				e.qqUnique,
				e.wechatUnique,
				e.wbUnique
		FROM <include refid="pms_employee" /> e 
	   LEFT JOIN <include refid="pms_employee_role" /> er
	   		ON e.EMPLOYEEID = er.EMPLOYEEID
	   LEFT JOIN <include refid="pms_role" /> r
	   		ON er.ROLEID = r.ROLEID
		<where>
			<include refid="condition" />
		</where>
	</select>
	
	<select id="listBy" resultType="PmsEmployee">
		SELECT e.EMPLOYEEID AS employeeId,
			   e.EMPLOYEELOGINNAME AS employeeLoginName,
			   e.EMPLOYEEREALNAME AS employeeRealName,
			   e.DIMISSIONSTATUS AS dimissionStatus
		FROM <include refid="pms_employee" /> e 
		<where>
			<include refid="condition" />
		</where>
		
		<![CDATA[
			ORDER BY e.EMPLOYEEID DESC
		]]>
	</select>
	
	<update id="updateSelf">
		UPDATE 
		<include refid="pms_employee" />
		<set>
			<if test="employeeImg != null and employeeImg != ''">
				EMPLOYEEIMG = #{employeeImg},
			</if>
			<if test="employeePassword != null and employeePassword != ''">
				EMPLOYEEPASSWORD = #{employeePassword},
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				PHONENUMBER = #{phoneNumber},
			</if>
			<if test="email != null and email != ''">
				EMAIL = #{email},
			</if>
			UPDATEDATE = CURRENT_TIMESTAMP	
		</set>
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<update id="updatePhoneById">
		UPDATE 
		<include refid="pms_employee" /> 
		<set>
			PHONENUMBER = #{phoneNumber},
			UPDATEDATE = CURRENT_TIMESTAMP
		</set> 
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
	<update id="updateEmailById">
		UPDATE 
		<include refid="pms_employee" /> 
		<set>
			EMAIL = #{email},
			UPDATEDATE = CURRENT_TIMESTAMP
		</set> 
		<where>
			EMPLOYEEID = ${employeeId}
		</where>
	</update>
	
</mapper>